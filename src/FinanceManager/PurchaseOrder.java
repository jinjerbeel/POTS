/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package FinanceManager;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rui
 */
public class PurchaseOrder extends javax.swing.JFrame {

    private PurchaseOrderClass purchaseOrder;

    /**
     * Creates new form JFrame2
     */
    public PurchaseOrder() {
        initComponents();
        this.purchaseOrder = null;
//        this.refresh_data();
        this.refresh_data();

    }

    public void refresh_data() {
        try {
            DefaultTableModel model = (DefaultTableModel) jTable3.getModel();
            model.setRowCount(0);

            FileReader fr = new FileReader("PurchaseOrder.txt");
            BufferedReader br = new BufferedReader(fr);
            String read;

            while ((read = br.readLine()) != null) {
                purchaseOrder = new PurchaseOrderClass(read.split(",")[0], read.split(",")[1], read.split(",")[2], read.split(",")[3], read.split(",")[4], read.split(",")[5], read.split(",")[6], read.split(",")[7],
                        read.split(",")[8], read.split(",")[9], read.split(",")[10], read.split(",")[11]);

                model.addRow(new Object[]{purchaseOrder.getPoNumber(), purchaseOrder.getRequisitionID(), purchaseOrder.getDate(), purchaseOrder.getSupplierID(), purchaseOrder.getSupplierName(), purchaseOrder.getItemCode(), purchaseOrder.getItemName(), purchaseOrder.getQuantity(), purchaseOrder.getUnitPrice(), purchaseOrder.getTotalPrice(), purchaseOrder.getApprovedBy(), purchaseOrder.getStatus()});
            }

            // Close resources
            br.close();
            fr.close();

        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Error reading file: " + e.getMessage());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Unexpected error: " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        jButton1.setText("jButton1");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setPreferredSize(new java.awt.Dimension(1280, 720));

        jLabel1.setFont(new java.awt.Font("Serif", 1, 24)); // NOI18N
        jLabel1.setText("Verify Purchase Order Page");

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Puchase Order ID", "Requisition ID", "Date", "Supplier ID", "Supplier Name", "Item ID", "Item Name", "Quantity", "Unit Price", "Total Price", "Approved By", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jTable3);

        jButton3.setFont(new java.awt.Font("Serif", 1, 14)); // NOI18N
        jButton3.setText("Reject");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Serif", 1, 14)); // NOI18N
        jButton2.setText("Approve");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton5.setText("Exit");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton4.setText("Search ");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton6.setText("Show All");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel2.setText("Search for Purchase Order :");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(484, 484, 484)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(136, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 1005, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(125, 125, 125))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(206, 206, 206)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(64, 64, 64))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(229, 229, 229)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(129, 129, 129))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jLabel1)
                .addGap(39, 39, 39)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton5)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 14, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 714, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            int selected_row = jTable3.getSelectedRow();
            if (selected_row == -1) {
                JOptionPane.showMessageDialog(null, "Please select a row to change status.");
                return;
            }
            File inf = new File("PurchaseOrder.txt");
            File tf = new File("temp.txt");

            FileReader fr = new FileReader(inf);
            FileWriter fw = new FileWriter(tf);
            BufferedReader br = new BufferedReader(fr);
            BufferedWriter bw = new BufferedWriter(fw);

            String read;
            DefaultTableModel model = (DefaultTableModel) jTable3.getModel();
            while ((read = br.readLine()) != null) {
                if (read.split(",")[0].equals(model.getValueAt(selected_row, 0).toString())) {
                    String Po_number = read.split(",")[0];
                    String Requisition_ID = read.split(",")[1];
                    String Date = read.split(",")[2];
                    String Supplier_ID = read.split(",")[3];
                    String SupplierName = read.split(",")[4];
                    String Item_Code = read.split(",")[5];
                    String Item_Name = read.split(",")[6];
                    String Quantity = read.split(",")[7];
                    String Unit_Price = read.split(",")[8];
                    String Total_Price = read.split(",")[9];
                    String Approved_By = read.split(",")[10];

                    bw.write(Po_number + "," + Requisition_ID + "," + Date + "," + Supplier_ID + "," + SupplierName + "," + Item_Code + "," + Item_Name + "," + Quantity + "," + Unit_Price + "," + Total_Price + "," + Approved_By + ", Approved");
                    bw.newLine();

                } else {
                    bw.write(read);
                    bw.newLine();

                }
            }

            bw.close();
            br.close();
            fr.close();
            fw.close();
            if (!inf.delete()) {
                JOptionPane.showMessageDialog(null, "Error while updating the file.");
                return;
            }
            if (!tf.renameTo(inf)) {
                JOptionPane.showMessageDialog(null, "Error while renaming the file.");
            }
            this.refresh_data();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            int selected_row = jTable3.getSelectedRow();
            if (selected_row == -1) {
                JOptionPane.showMessageDialog(null, "Please select a row to change status.");
                return;
            }
            File inf = new File("PurchaseOrder.txt");
            File tf = new File("temp.txt");

            FileReader fr = new FileReader(inf);
            FileWriter fw = new FileWriter(tf);
            BufferedReader br = new BufferedReader(fr);
            BufferedWriter bw = new BufferedWriter(fw);

            String read;
            DefaultTableModel model = (DefaultTableModel) jTable3.getModel();
            while ((read = br.readLine()) != null) {
                if (read.split(",")[0].equals(model.getValueAt(selected_row, 0).toString())) {
                    String Po_number = read.split(",")[0];
                    String Requisition_ID = read.split(",")[1];
                    String Date = read.split(",")[2];
                    String Supplier_ID = read.split(",")[3];
                    String SupplierName = read.split(",")[4];
                    String Item_Code = read.split(",")[5];
                    String Item_Name = read.split(",")[6];
                    String Quantity = read.split(",")[7];
                    String Unit_Price = read.split(",")[8];
                    String Total_Price = read.split(",")[9];
                    String Approved_By = read.split(",")[10];

                    bw.write(Po_number + "," + Requisition_ID + "," + Date + "," + Supplier_ID + "," + SupplierName + "," + Item_Code + "," + Item_Name + "," + Quantity + "," + Unit_Price + "," + Total_Price + "," + Approved_By + ", Rejected");
                    bw.newLine();
                } else {
                    bw.write(read);
                    bw.newLine();
                }

            }
            bw.close();
            br.close();
            fr.close();
            fw.close();
            if (!inf.delete()) {
                JOptionPane.showMessageDialog(null, "Error while updating the file.");
                return;
            }
            if (!tf.renameTo(inf)) {
                JOptionPane.showMessageDialog(null, "Error while renaming the file.");
            }
            this.refresh_data();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        FinanceMenu jf1 = new FinanceMenu();
        jf1.show();

        dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        String str = jTextField1.getText().trim(); // Get the entered text and trim it
        if (!str.isEmpty()) {

            jTextField1.setText("");      // Clear the text field
        } else {
            JOptionPane.showMessageDialog(this, "Please enter text.");
        }
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        String enteredText = jTextField1.getText().trim(); // Get and trim text from the text field

        if (enteredText.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter a Purchase Order number to search.");
            return;
        }

        try {
            DefaultTableModel model = (DefaultTableModel) jTable3.getModel();
            model.setRowCount(0); // Clear existing rows from the table

            boolean found = false; // Initialize a flag to check for matches

            try (BufferedReader br = new BufferedReader(new FileReader("PurchaseOrder.txt"))) {
                String read;

                while ((read = br.readLine()) != null) {
                    String[] data = read.split(","); // Split the line into an array of data

                    if (data.length < 12) { // Check if the line has at least 12 columns
                        JOptionPane.showMessageDialog(this, "Invalid data format in file.");
                        continue; // Skip invalid rows
                    }

                    String Po_number = data[0];       // Extract PO number
                    String Requisition_ID = data[1];
                    String Date = data[2];
                    String Supplier_ID = data[3];
                    String SupplierName = data[4];
                    String Item_Code = data[5];
                    String Item_Name = data[6];
                    String Quantity = data[7];
                    String Unit_Price = data[8];
                    String Total_Price = data[9];
                    String Approved_By = data[10];
                    String Status = data[11];

                    // Check if the PO number matches the entered text
                    if (Po_number.equalsIgnoreCase(enteredText)) {
                        found = true; // Match found
                        model.addRow(new Object[]{
                            Po_number, Requisition_ID, Date, Supplier_ID, SupplierName,
                            Item_Code, Item_Name, Quantity, Unit_Price, Total_Price,
                            Approved_By, Status
                        });
                    }
                }
            }

            // If no match is found, show a message
            if (!found) {
                JOptionPane.showMessageDialog(this, "No matching Purchase Order found.");
            }

        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error reading file: " + e.getMessage());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Unexpected error: " + e.getMessage());
        }

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        this.refresh_data();
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PurchaseOrder.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PurchaseOrder.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PurchaseOrder.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PurchaseOrder.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PurchaseOrder().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
